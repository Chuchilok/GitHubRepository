<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dogpro.dao.FriendCircleMapper" >
  <resultMap id="BaseResultMap" type="com.dogpro.domain.model.FriendCircle" >
    <id column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="mediaType" property="mediatype" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="publishIp" property="publiship" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
    <result column="provinces" property="provinces" jdbcType="VARCHAR" />
    <result column="municipalities" property="municipalities" jdbcType="VARCHAR" />
    <result column="districts" property="districts" jdbcType="VARCHAR" />
    <result column="townStreet" property="townstreet" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="REAL" />
    <result column="latitude" property="latitude" jdbcType="REAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="friendCirCode" property="friendcircode" jdbcType="BIGINT" />
    <result column="updateCode" property="updatecode" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.dogpro.domain.model.FriendCircle" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    friendCir_id, user_id, publishTime, mediaType, type, publishIp, remark, sort, addTimes, 
    updateTimes, provinces, municipalities, districts, townStreet, address, longitude, 
    latitude, state, friendCirCode, updateCode
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.dogpro.domain.model.FriendCircleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FriendCircle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pagination != null" >
      limit #{pagination.begin} , #{pagination.length}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dogpro.domain.model.FriendCircleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FriendCircle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pagination != null" >
      limit #{pagination.begin} , #{pagination.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from FriendCircle
    where friendCir_id = #{friendcirId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from FriendCircle
    where friendCir_id = #{friendcirId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dogpro.domain.model.FriendCircleExample" >
    delete from FriendCircle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dogpro.domain.model.FriendCircle" >
    insert into FriendCircle (friendCir_id, user_id, publishTime, 
      mediaType, type, publishIp, 
      remark, sort, addTimes, 
      updateTimes, provinces, municipalities, 
      districts, townStreet, address, 
      longitude, latitude, state, 
      friendCirCode, updateCode, content
      )
    values (#{friendcirId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{publishtime,jdbcType=TIMESTAMP}, 
      #{mediatype,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{publiship,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR}, #{addtimes,jdbcType=TIMESTAMP}, 
      #{updatetimes,jdbcType=TIMESTAMP}, #{provinces,jdbcType=VARCHAR}, #{municipalities,jdbcType=VARCHAR}, 
      #{districts,jdbcType=VARCHAR}, #{townstreet,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=REAL}, #{latitude,jdbcType=REAL}, #{state,jdbcType=INTEGER}, 
      #{friendcircode,jdbcType=BIGINT}, #{updatecode,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="friendcirId" parameterType="com.dogpro.domain.model.FriendCircle" >
    insert into FriendCircle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="friendcirId != null" >
        friendCir_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="publishtime != null" >
        publishTime,
      </if>
      <if test="mediatype != null" >
        mediaType,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="publiship != null" >
        publishIp,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="addtimes != null" >
        addTimes,
      </if>
      <if test="updatetimes != null" >
        updateTimes,
      </if>
      <if test="provinces != null" >
        provinces,
      </if>
      <if test="municipalities != null" >
        municipalities,
      </if>
      <if test="districts != null" >
        districts,
      </if>
      <if test="townstreet != null" >
        townStreet,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="friendcircode != null" >
        friendCirCode,
      </if>
      <if test="updatecode != null" >
        updateCode,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="friendcirId != null" >
        #{friendcirId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="mediatype != null" >
        #{mediatype,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="publiship != null" >
        #{publiship,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="addtimes != null" >
        #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        #{updatetimes,jdbcType=TIMESTAMP},
      </if>
      <if test="provinces != null" >
        #{provinces,jdbcType=VARCHAR},
      </if>
      <if test="municipalities != null" >
        #{municipalities,jdbcType=VARCHAR},
      </if>
      <if test="districts != null" >
        #{districts,jdbcType=VARCHAR},
      </if>
      <if test="townstreet != null" >
        #{townstreet,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=REAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="friendcircode != null" >
        #{friendcircode,jdbcType=BIGINT},
      </if>
      <if test="updatecode != null" >
        #{updatecode,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <insert id="insertSelective" parameterType="com.dogpro.domain.model.FriendCircle" >
    insert into FriendCircle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="friendcirId != null" >
        friendCir_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="publishtime != null" >
        publishTime,
      </if>
      <if test="mediatype != null" >
        mediaType,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="publiship != null" >
        publishIp,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="addtimes != null" >
        addTimes,
      </if>
      <if test="updatetimes != null" >
        updateTimes,
      </if>
      <if test="provinces != null" >
        provinces,
      </if>
      <if test="municipalities != null" >
        municipalities,
      </if>
      <if test="districts != null" >
        districts,
      </if>
      <if test="townstreet != null" >
        townStreet,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="friendcircode != null" >
        friendCirCode,
      </if>
      <if test="updatecode != null" >
        updateCode,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="friendcirId != null" >
        #{friendcirId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="mediatype != null" >
        #{mediatype,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="publiship != null" >
        #{publiship,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="addtimes != null" >
        #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        #{updatetimes,jdbcType=TIMESTAMP},
      </if>
      <if test="provinces != null" >
        #{provinces,jdbcType=VARCHAR},
      </if>
      <if test="municipalities != null" >
        #{municipalities,jdbcType=VARCHAR},
      </if>
      <if test="districts != null" >
        #{districts,jdbcType=VARCHAR},
      </if>
      <if test="townstreet != null" >
        #{townstreet,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=REAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="friendcircode != null" >
        #{friendcircode,jdbcType=BIGINT},
      </if>
      <if test="updatecode != null" >
        #{updatecode,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dogpro.domain.model.FriendCircleExample" resultType="java.lang.Integer" >
    select count(*) from FriendCircle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update FriendCircle
    <set >
      <if test="record.friendcirId != null" >
        friendCir_id = #{record.friendcirId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.publishtime != null" >
        publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mediatype != null" >
        mediaType = #{record.mediatype,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.publiship != null" >
        publishIp = #{record.publiship,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=VARCHAR},
      </if>
      <if test="record.addtimes != null" >
        addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetimes != null" >
        updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP},
      </if>
      <if test="record.provinces != null" >
        provinces = #{record.provinces,jdbcType=VARCHAR},
      </if>
      <if test="record.municipalities != null" >
        municipalities = #{record.municipalities,jdbcType=VARCHAR},
      </if>
      <if test="record.districts != null" >
        districts = #{record.districts,jdbcType=VARCHAR},
      </if>
      <if test="record.townstreet != null" >
        townStreet = #{record.townstreet,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=REAL},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.friendcircode != null" >
        friendCirCode = #{record.friendcircode,jdbcType=BIGINT},
      </if>
      <if test="record.updatecode != null" >
        updateCode = #{record.updatecode,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update FriendCircle
    set friendCir_id = #{record.friendcirId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      mediaType = #{record.mediatype,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      publishIp = #{record.publiship,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP},
      provinces = #{record.provinces,jdbcType=VARCHAR},
      municipalities = #{record.municipalities,jdbcType=VARCHAR},
      districts = #{record.districts,jdbcType=VARCHAR},
      townStreet = #{record.townstreet,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=REAL},
      latitude = #{record.latitude,jdbcType=REAL},
      state = #{record.state,jdbcType=INTEGER},
      friendCirCode = #{record.friendcircode,jdbcType=BIGINT},
      updateCode = #{record.updatecode,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update FriendCircle
    set friendCir_id = #{record.friendcirId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      mediaType = #{record.mediatype,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      publishIp = #{record.publiship,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP},
      provinces = #{record.provinces,jdbcType=VARCHAR},
      municipalities = #{record.municipalities,jdbcType=VARCHAR},
      districts = #{record.districts,jdbcType=VARCHAR},
      townStreet = #{record.townstreet,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=REAL},
      latitude = #{record.latitude,jdbcType=REAL},
      state = #{record.state,jdbcType=INTEGER},
      friendCirCode = #{record.friendcircode,jdbcType=BIGINT},
      updateCode = #{record.updatecode,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dogpro.domain.model.FriendCircle" >
    update FriendCircle
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="publishtime != null" >
        publishTime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="mediatype != null" >
        mediaType = #{mediatype,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="publiship != null" >
        publishIp = #{publiship,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="addtimes != null" >
        addTimes = #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        updateTimes = #{updatetimes,jdbcType=TIMESTAMP},
      </if>
      <if test="provinces != null" >
        provinces = #{provinces,jdbcType=VARCHAR},
      </if>
      <if test="municipalities != null" >
        municipalities = #{municipalities,jdbcType=VARCHAR},
      </if>
      <if test="districts != null" >
        districts = #{districts,jdbcType=VARCHAR},
      </if>
      <if test="townstreet != null" >
        townStreet = #{townstreet,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="friendcircode != null" >
        friendCirCode = #{friendcircode,jdbcType=BIGINT},
      </if>
      <if test="updatecode != null" >
        updateCode = #{updatecode,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where friendCir_id = #{friendcirId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dogpro.domain.model.FriendCircle" >
    update FriendCircle
    set user_id = #{userId,jdbcType=BIGINT},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      mediaType = #{mediatype,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      publishIp = #{publiship,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      addTimes = #{addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{updatetimes,jdbcType=TIMESTAMP},
      provinces = #{provinces,jdbcType=VARCHAR},
      municipalities = #{municipalities,jdbcType=VARCHAR},
      districts = #{districts,jdbcType=VARCHAR},
      townStreet = #{townstreet,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      state = #{state,jdbcType=INTEGER},
      friendCirCode = #{friendcircode,jdbcType=BIGINT},
      updateCode = #{updatecode,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where friendCir_id = #{friendcirId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dogpro.domain.model.FriendCircle" >
    update FriendCircle
    set user_id = #{userId,jdbcType=BIGINT},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      mediaType = #{mediatype,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      publishIp = #{publiship,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      addTimes = #{addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{updatetimes,jdbcType=TIMESTAMP},
      provinces = #{provinces,jdbcType=VARCHAR},
      municipalities = #{municipalities,jdbcType=VARCHAR},
      districts = #{districts,jdbcType=VARCHAR},
      townStreet = #{townstreet,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      state = #{state,jdbcType=INTEGER},
      friendCirCode = #{friendcircode,jdbcType=BIGINT},
      updateCode = #{updatecode,jdbcType=BIGINT}
    where friendCir_id = #{friendcirId,jdbcType=BIGINT}
  </update>
  
  
  <select id="countAlbumByUid" resultType="java.lang.Integer" parameterType="java.lang.Long" >
    select count(*) from FriendCircle,FriendCircleMedia
    where FriendCircle.friendCir_id = FriendCircleMedia.friendCir_id
    and FriendCircle.state = 1
    and FriendCircle.user_id = #{userId,jdbcType=BIGINT}
  </select>
  
  
  
  
  <resultMap id="FriendCircleExtendResultMap" type="com.dogpro.domain.model.extend.FriendCircleExtend" >
    <id column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="mediaType" property="mediatype" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="publishIp" property="publiship" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
    <result column="provinces" property="provinces" jdbcType="VARCHAR" />
    <result column="municipalities" property="municipalities" jdbcType="VARCHAR" />
    <result column="districts" property="districts" jdbcType="VARCHAR" />
    <result column="townStreet" property="townstreet" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="REAL" />
    <result column="latitude" property="latitude" jdbcType="REAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="friendCirCode" property="friendcircode" jdbcType="BIGINT" />
    <result column="updateCode" property="updatecode" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
     <result column="praiseTotal" property="praiseTotal" jdbcType="INTEGER" />
     <result column="isPraise" property="isPraise" jdbcType="INTEGER" />
    <association property="user" resultMap="UserResultMap"/> 
    <collection property="friendCircleMedias" resultMap="FriendCircleMediaResultMap"/> 
    <collection property="praises" resultMap="PraiseResultMap"/> 
    <collection property="discussExtends" resultMap="DiscussExtendResultMap"/> 
  </resultMap>
  
  
  <resultMap id="UserResultMap" type="com.dogpro.domain.model.User" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="headPic" property="headpic" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="pswd" property="pswd" jdbcType="VARCHAR" />
    <result column="provinces" property="provinces" jdbcType="VARCHAR" />
    <result column="municipalities" property="municipalities" jdbcType="VARCHAR" />
    <result column="districts" property="districts" jdbcType="VARCHAR" />
    <result column="townStreet" property="townstreet" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="offlineTimes" property="offlinetimes" jdbcType="BIGINT" />
    <result column="isCompleted" property="iscompleted" jdbcType="INTEGER" />
    <result column="UUID" property="uuid" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="FriendCircleMediaResultMap" type="com.dogpro.domain.model.FriendCircleMedia" >
    <id column="media_id" property="mediaId" jdbcType="BIGINT" />
    <result column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="mediaUrl" property="mediaurl" jdbcType="VARCHAR" />
    <result column="mediaSubUrl" property="mediasuburl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <resultMap id="PraiseResultMap" type="com.dogpro.domain.model.Praise" >
    <id column="praise_id" property="praiseId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="praiseTime" property="praisetime" jdbcType="TIMESTAMP" />
    <result column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="praiseStar" property="praisestar" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="DiscussResultMap" type="com.dogpro.domain.model.Discuss" >
    <id column="discuss_id" property="discussId" jdbcType="BIGINT" />
    <result column="PId" property="pid" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="discussTime" property="discusstime" jdbcType="TIMESTAMP" />
    <result column="discussIp" property="discussip" jdbcType="VARCHAR" />
    <result column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="discussContent" property="discusscontent" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="DiscussExtendResultMap" type="com.dogpro.domain.model.extend.DiscussExtend" >
    <id column="discuss_id" property="discussId" jdbcType="BIGINT" />
    <result column="discussUserId" property="discussUserId" jdbcType="BIGINT" />
    <result column="discussNickname" property="discussNickname" jdbcType="VARCHAR" />
    <result column="discussHeadPic" property="discussHeadPic" jdbcType="VARCHAR" />
    <result column="replyUserId" property="replyUserId" jdbcType="BIGINT" />
    <result column="replyNickname" property="replyNickname" jdbcType="VARCHAR" />
    <result column="isReply" property="isReply" jdbcType="INTEGER" />
    <result column="PId" property="pid" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="discussTime" property="discusstime" jdbcType="TIMESTAMP" />
    <result column="discussIp" property="discussip" jdbcType="VARCHAR" />
    <result column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="discussContent" property="discusscontent" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  
  <select id="selectFCextendByExample" resultMap="FriendCircleExtendResultMap" parameterType="map">
   
  
    SELECT 
    fc.*,fm.*,u.*,p.*,ds.*
FROM 
(
select *
    from FriendCircle
     where
    <if test="isRefresh != null and isRefresh>0" >
      friendCirCode > #{friendCirCode}
    </if>
    <if test="isRefresh != null and isRefresh==0" >
    <![CDATA[
     friendCirCode < #{friendCirCode}
      ]]>
    </if>
     <if test="isRefresh != null and isRefresh &lt; 0 " >
    <![CDATA[
     friendCir_id = #{friendCirCode}
      ]]>
    </if>
    and state = 1
    ORDER BY publishTime DESC
    <if test="pagination != null" >
      limit #{pagination.begin} , #{pagination.length}
    </if>
) fc
 <![CDATA[
 LEFT JOIN FriendCircleMedia fm ON fc.friendCir_id = fm.friendCir_id
LEFT JOIN `User` u ON fc.user_id = u.user_id
LEFT JOIN 
(
SELECT friendCir_id ,COUNT(friendCir_id)as praiseTotal ,SUM(CASE WHEN p.user_id = #{userId} THEN 1 ELSE 0 END)AS isPraise FROM Praise p WHERE p.state = 1 GROUP BY friendCir_id

) p

 ON fc.friendCir_id = p.friendCir_id
LEFT JOIN 
( SELECT d.friendCir_id,d.discuss_id,d.discussContent,u.user_id as discussUserId,u.nickname as discussNickname ,u.headPic as discussHeadPic,u2.nickname as replyNickname ,u2.user_id as replyUserId, if(d.PId<>0,1,0)as isReply
from (Discuss d LEFT JOIN User u ON d.user_id = u.user_id) 
LEFT JOIN (Discuss d2 LEFT JOIN User u2 ON d2.user_id = u2.user_id) 
ON d.PId = d2.discuss_id
WHERE d.state = 1
ORDER BY d.discussTime desc) ds

on fc.friendCir_id = ds.friendCir_id 
]]>

  </select>
  
  <select id="getFCdetail" resultMap="FriendCircleExtendResultMap" parameterType="map">
  SELECT *
FROM FriendCircle fc LEFT JOIN FriendCircleMedia fm ON fc.friendCir_id = fm.friendCir_id
LEFT JOIN `User` u on fc.user_id = u.user_id 
LEFT JOIN 
(
SELECT friendCir_id ,SUM(CASE WHEN p.user_id = #{userId} THEN 1 ELSE 0 END)AS isPraise FROM Praise p WHERE p.state = 1 GROUP BY friendCir_id
) p
ON fc.friendCir_id = p.friendCir_id
WHERE fc.friendCir_id = #{friendCirId}
  </select>
  
  <select id="mineFriendCircle" resultMap="FriendCircleExtendResultMap" parameterType="map">
  SELECT * FROM
(
SELECT * FROM FriendCircle 
WHERE state = 1
AND user_id = #{userId}
order by publishTime desc
 <if test="pagination != null" >
      limit #{pagination.begin} , #{pagination.length}
    </if>
) fc 

LEFT JOIN FriendCircleMedia fm ON fc.friendCir_id = fm.friendCir_id


  </select>
  
</mapper>