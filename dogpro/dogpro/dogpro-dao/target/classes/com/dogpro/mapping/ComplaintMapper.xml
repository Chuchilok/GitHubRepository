<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dogpro.dao.ComplaintMapper" >
  <resultMap id="BaseResultMap" type="com.dogpro.domain.model.Complaint" >
    <id column="complaint_id" property="complaintId" jdbcType="BIGINT" />
    <result column="friendCir_id" property="friendcirId" jdbcType="BIGINT" />
    <result column="complaintTime" property="complainttime" jdbcType="TIMESTAMP" />
    <result column="complaintContent" property="complaintcontent" jdbcType="VARCHAR" />
    <result column="complaintType" property="complainttype" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="complaintIp" property="complaintip" jdbcType="VARCHAR" />
    <result column="check" property="check" jdbcType="VARCHAR" />
    <result column="checkTime" property="checktime" jdbcType="TIMESTAMP" />
    <result column="checkUserId" property="checkuserid" jdbcType="BIGINT" />
    <result column="handleProcess" property="handleprocess" jdbcType="VARCHAR" />
    <result column="handleResult" property="handleresult" jdbcType="VARCHAR" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    complaint_id, friendCir_id, complaintTime, complaintContent, complaintType, user_id, 
    complaintIp, `check`, checkTime, checkUserId, handleProcess, handleResult, addTimes, 
    updateTimes
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dogpro.domain.model.ComplaintExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Complaint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pagination != null" >
      limit #{pagination.begin} , #{pagination.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from Complaint
    where complaint_id = #{complaintId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from Complaint
    where complaint_id = #{complaintId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dogpro.domain.model.ComplaintExample" >
    delete from Complaint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dogpro.domain.model.Complaint" >
    insert into Complaint (complaint_id, friendCir_id, complaintTime, 
      complaintContent, complaintType, user_id, 
      complaintIp, `check`, checkTime, 
      checkUserId, handleProcess, handleResult, 
      addTimes, updateTimes)
    values (#{complaintId,jdbcType=BIGINT}, #{friendcirId,jdbcType=BIGINT}, #{complainttime,jdbcType=TIMESTAMP}, 
      #{complaintcontent,jdbcType=VARCHAR}, #{complainttype,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{complaintip,jdbcType=VARCHAR}, #{check,jdbcType=VARCHAR}, #{checktime,jdbcType=TIMESTAMP}, 
      #{checkuserid,jdbcType=BIGINT}, #{handleprocess,jdbcType=VARCHAR}, #{handleresult,jdbcType=VARCHAR}, 
      #{addtimes,jdbcType=TIMESTAMP}, #{updatetimes,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dogpro.domain.model.Complaint" >
    insert into Complaint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="complaintId != null" >
        complaint_id,
      </if>
      <if test="friendcirId != null" >
        friendCir_id,
      </if>
      <if test="complainttime != null" >
        complaintTime,
      </if>
      <if test="complaintcontent != null" >
        complaintContent,
      </if>
      <if test="complainttype != null" >
        complaintType,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="complaintip != null" >
        complaintIp,
      </if>
      <if test="check != null" >
        `check`,
      </if>
      <if test="checktime != null" >
        checkTime,
      </if>
      <if test="checkuserid != null" >
        checkUserId,
      </if>
      <if test="handleprocess != null" >
        handleProcess,
      </if>
      <if test="handleresult != null" >
        handleResult,
      </if>
      <if test="addtimes != null" >
        addTimes,
      </if>
      <if test="updatetimes != null" >
        updateTimes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="complaintId != null" >
        #{complaintId,jdbcType=BIGINT},
      </if>
      <if test="friendcirId != null" >
        #{friendcirId,jdbcType=BIGINT},
      </if>
      <if test="complainttime != null" >
        #{complainttime,jdbcType=TIMESTAMP},
      </if>
      <if test="complaintcontent != null" >
        #{complaintcontent,jdbcType=VARCHAR},
      </if>
      <if test="complainttype != null" >
        #{complainttype,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="complaintip != null" >
        #{complaintip,jdbcType=VARCHAR},
      </if>
      <if test="check != null" >
        #{check,jdbcType=VARCHAR},
      </if>
      <if test="checktime != null" >
        #{checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkuserid != null" >
        #{checkuserid,jdbcType=BIGINT},
      </if>
      <if test="handleprocess != null" >
        #{handleprocess,jdbcType=VARCHAR},
      </if>
      <if test="handleresult != null" >
        #{handleresult,jdbcType=VARCHAR},
      </if>
      <if test="addtimes != null" >
        #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        #{updatetimes,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dogpro.domain.model.ComplaintExample" resultType="java.lang.Integer" >
    select count(*) from Complaint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Complaint
    <set >
      <if test="record.complaintId != null" >
        complaint_id = #{record.complaintId,jdbcType=BIGINT},
      </if>
      <if test="record.friendcirId != null" >
        friendCir_id = #{record.friendcirId,jdbcType=BIGINT},
      </if>
      <if test="record.complainttime != null" >
        complaintTime = #{record.complainttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.complaintcontent != null" >
        complaintContent = #{record.complaintcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.complainttype != null" >
        complaintType = #{record.complainttype,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.complaintip != null" >
        complaintIp = #{record.complaintip,jdbcType=VARCHAR},
      </if>
      <if test="record.check != null" >
        `check` = #{record.check,jdbcType=VARCHAR},
      </if>
      <if test="record.checktime != null" >
        checkTime = #{record.checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkuserid != null" >
        checkUserId = #{record.checkuserid,jdbcType=BIGINT},
      </if>
      <if test="record.handleprocess != null" >
        handleProcess = #{record.handleprocess,jdbcType=VARCHAR},
      </if>
      <if test="record.handleresult != null" >
        handleResult = #{record.handleresult,jdbcType=VARCHAR},
      </if>
      <if test="record.addtimes != null" >
        addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetimes != null" >
        updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Complaint
    set complaint_id = #{record.complaintId,jdbcType=BIGINT},
      friendCir_id = #{record.friendcirId,jdbcType=BIGINT},
      complaintTime = #{record.complainttime,jdbcType=TIMESTAMP},
      complaintContent = #{record.complaintcontent,jdbcType=VARCHAR},
      complaintType = #{record.complainttype,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      complaintIp = #{record.complaintip,jdbcType=VARCHAR},
      `check` = #{record.check,jdbcType=VARCHAR},
      checkTime = #{record.checktime,jdbcType=TIMESTAMP},
      checkUserId = #{record.checkuserid,jdbcType=BIGINT},
      handleProcess = #{record.handleprocess,jdbcType=VARCHAR},
      handleResult = #{record.handleresult,jdbcType=VARCHAR},
      addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dogpro.domain.model.Complaint" >
    update Complaint
    <set >
      <if test="friendcirId != null" >
        friendCir_id = #{friendcirId,jdbcType=BIGINT},
      </if>
      <if test="complainttime != null" >
        complaintTime = #{complainttime,jdbcType=TIMESTAMP},
      </if>
      <if test="complaintcontent != null" >
        complaintContent = #{complaintcontent,jdbcType=VARCHAR},
      </if>
      <if test="complainttype != null" >
        complaintType = #{complainttype,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="complaintip != null" >
        complaintIp = #{complaintip,jdbcType=VARCHAR},
      </if>
      <if test="check != null" >
        `check` = #{check,jdbcType=VARCHAR},
      </if>
      <if test="checktime != null" >
        checkTime = #{checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkuserid != null" >
        checkUserId = #{checkuserid,jdbcType=BIGINT},
      </if>
      <if test="handleprocess != null" >
        handleProcess = #{handleprocess,jdbcType=VARCHAR},
      </if>
      <if test="handleresult != null" >
        handleResult = #{handleresult,jdbcType=VARCHAR},
      </if>
      <if test="addtimes != null" >
        addTimes = #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        updateTimes = #{updatetimes,jdbcType=TIMESTAMP},
      </if>
    </set>
    where complaint_id = #{complaintId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dogpro.domain.model.Complaint" >
    update Complaint
    set friendCir_id = #{friendcirId,jdbcType=BIGINT},
      complaintTime = #{complainttime,jdbcType=TIMESTAMP},
      complaintContent = #{complaintcontent,jdbcType=VARCHAR},
      complaintType = #{complainttype,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      complaintIp = #{complaintip,jdbcType=VARCHAR},
      `check` = #{check,jdbcType=VARCHAR},
      checkTime = #{checktime,jdbcType=TIMESTAMP},
      checkUserId = #{checkuserid,jdbcType=BIGINT},
      handleProcess = #{handleprocess,jdbcType=VARCHAR},
      handleResult = #{handleresult,jdbcType=VARCHAR},
      addTimes = #{addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{updatetimes,jdbcType=TIMESTAMP}
    where complaint_id = #{complaintId,jdbcType=BIGINT}
  </update>
</mapper>