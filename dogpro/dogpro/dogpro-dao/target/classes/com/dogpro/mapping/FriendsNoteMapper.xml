<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dogpro.dao.FriendsNoteMapper" >
  <resultMap id="BaseResultMap" type="com.dogpro.domain.model.FriendsNote" >
    <id column="FriendsNoteId" property="friendsnoteid" jdbcType="BIGINT" />
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="friendId" property="friendid" jdbcType="BIGINT" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="addTimes" property="addtimes" jdbcType="TIMESTAMP" />
    <result column="updateTimes" property="updatetimes" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FriendsNoteId, userId, friendId, notes, state, addTimes, updateTimes
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dogpro.domain.model.FriendsNoteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FriendsNote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pagination != null" >
      limit #{pagination.begin} , #{pagination.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from FriendsNote
    where FriendsNoteId = #{friendsnoteid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from FriendsNote
    where FriendsNoteId = #{friendsnoteid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dogpro.domain.model.FriendsNoteExample" >
    delete from FriendsNote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dogpro.domain.model.FriendsNote" >
    insert into FriendsNote (FriendsNoteId, userId, friendId, 
      notes, state, addTimes, 
      updateTimes)
    values (#{friendsnoteid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{friendid,jdbcType=BIGINT}, 
      #{notes,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{addtimes,jdbcType=TIMESTAMP}, 
      #{updatetimes,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dogpro.domain.model.FriendsNote" >
    insert into FriendsNote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="friendsnoteid != null" >
        FriendsNoteId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="friendid != null" >
        friendId,
      </if>
      <if test="notes != null" >
        notes,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="addtimes != null" >
        addTimes,
      </if>
      <if test="updatetimes != null" >
        updateTimes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="friendsnoteid != null" >
        #{friendsnoteid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=BIGINT},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="addtimes != null" >
        #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        #{updatetimes,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dogpro.domain.model.FriendsNoteExample" resultType="java.lang.Integer" >
    select count(*) from FriendsNote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update FriendsNote
    <set >
      <if test="record.friendsnoteid != null" >
        FriendsNoteId = #{record.friendsnoteid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.friendid != null" >
        friendId = #{record.friendid,jdbcType=BIGINT},
      </if>
      <if test="record.notes != null" >
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.addtimes != null" >
        addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetimes != null" >
        updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update FriendsNote
    set FriendsNoteId = #{record.friendsnoteid,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      friendId = #{record.friendid,jdbcType=BIGINT},
      notes = #{record.notes,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      addTimes = #{record.addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{record.updatetimes,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dogpro.domain.model.FriendsNote" >
    update FriendsNote
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="friendid != null" >
        friendId = #{friendid,jdbcType=BIGINT},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="addtimes != null" >
        addTimes = #{addtimes,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetimes != null" >
        updateTimes = #{updatetimes,jdbcType=TIMESTAMP},
      </if>
    </set>
    where FriendsNoteId = #{friendsnoteid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dogpro.domain.model.FriendsNote" >
    update FriendsNote
    set userId = #{userid,jdbcType=BIGINT},
      friendId = #{friendid,jdbcType=BIGINT},
      notes = #{notes,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      addTimes = #{addtimes,jdbcType=TIMESTAMP},
      updateTimes = #{updatetimes,jdbcType=TIMESTAMP}
    where FriendsNoteId = #{friendsnoteid,jdbcType=BIGINT}
  </update>
</mapper>